{"version":3,"file":"static/js/186.73f57530.chunk.js","mappings":"oQAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,mCAAG,WAAML,GAAN,iGAEWM,EAAAA,EAAAA,IAAkBN,GAF7B,OAEZO,EAFY,OAGlBH,EAAWG,GAHO,gDAKlBC,QAAQC,MAAR,MALkB,yDAAH,sDAcnB,OALAC,EAAAA,EAAAA,YAAU,WACRL,EAAcL,EAEf,GAAE,KAGD,+BACE,wBACsB,IAAnBG,EAAQQ,OACLR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,0BAAOC,MAFAC,EADC,IAMZ,oBAIX,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const renderReviews = async movieId => {\n    try {\n      const fetchedReviews = await fetchMovieReviews(movieId);\n      setReviews(fetchedReviews);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    renderReviews(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ul>\n        {reviews.length !== 0\n          ? reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h4>{author}</h4>\n                <span>{content}</span>\n              </li>\n            ))\n          : 'No reviews yet'}\n      </ul>\n    </>\n  );\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","renderReviews","fetchMovieReviews","fetchedReviews","console","error","useEffect","length","map","author","content","id"],"sourceRoot":""}